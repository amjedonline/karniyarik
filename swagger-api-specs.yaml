# Karniyarik API -  Manage Alotaksim business objects.
swagger: '2.0'
info:
  title: Karniyarik
  description: Rest API access to Alotaksim
  version: "0.0.2"
# the domain of the service
host: karniyarik.altotaksim.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api
produces:
  - application/json
paths:
  /authentication/jwt_token:
    post:
      summary: Authentication and token creation
      description: |
        The authentication endpoint accepts email and password for authentication and in turn creates an access token for to facilitate  identity for eventual resource access.
      parameters:
        - name: email
          in: body
          description: Email address of the registered user.
          required: true
          type: string
        - name: password
          in: body
          description: password for the registered email.
          required: true
          type: string
        - name: registration_id
          in: body
          description: Registration id for google notification service.
          required: true
          type: string
      tags:
        - Login
      responses:
        200:
          description: Response object containing access token.
          schema:
            type: object
            format: json
            items:
              $ref: '#/definitions/TokenResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/userId:
    get:
      summary: Get user object
      description: |
        Returns a simple user object.
      parameters:
        - name: userId
          in: path
          description: Alotaksim userid
          required: true
          type: string
      tags:
        - User
      responses:
        200:
          description: A json User object
          schema:
            type: object
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create user
      description: Create a new user in the system.
      parameters:
        - name: email
          in: body
          description: unique email.
          required: true
          type: string
        - name: password
          in: body
          description: password for the new user.
          required: true
          type: string
      tags:
        - User
      responses:
        200:
          description: Newly created User object in Json format
          schema:
            type: object
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /drivers/:
    get:
      summary: Get all driver profiles
      description: The Driver endpoint deals with the Driver profile objects.
      tags:
        - Drivers
      responses:
        200:
          description: An array of all driver profile in Json format.
          schema:
            $ref: '#/definitions/Driver'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: create a driver profile
      description: create a new driver profile.
      tags:
        - Drivers
      parameters:
        - name: fname
          in: body
          description: Drivers first name
          required: true
          type: string
        - name: lname
          in: body
          description: Last name.
          required: true
          type: string
        - name: email
          in: body
          description: Email address of the driver
          required: true
          type: string
        - name: gender
          in: body
          required: true
          type: string
        - name: dob
          in: body
          description: Date of birth
          required: true
          type: false
        - name: mobile
          in: body
          description: Mobile phone number.
          required: true
          type: string
        - name: licenseNumer
          in: body
          description: Driving license number.
          required: true
          type: string
        - name: licenseExpiryDate
          in: body
          required: false
          type: string
        - name: insuranceNumber
          in: body
          required: false
          type: string
        - name: insuranceExpiryDate
          in: body
          required: false
          type: string
        - name: country
          in: body
          required: true
          type: string
        - name: state
          in: body
          required: true
          type: string
        - name: city
          in: body
          required: true
          type: string
        - name: addressLine1
          in: body
          required: true
          type: string
        - name: addressLine2
          in: body
          required: true
          type: string
        - name: postal
          in: body
          required: true
          type: string
      responses:
        200:
          description: Profile information of the newly created driver in Json format.
      responses:
        200:
          description: Profile information for a driver.
          schema:
            $ref: '#/definitions/Driver'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /drivers/driver_id:
    get:
      summary: A single Driver profile
      description: A specific drivers profile.
      parameters:
        - name: driver_id
          in: path
          type: string
          description: unique id of the driver in the system.
      tags:
        - Driver
      responses:
        200:
          description: Driver object in Json format.
          schema:
            $ref: '#/definitions/Driver'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /taxis/:
    get:
      summary: Get all taxis
      description: The Taxi endpoint deals with the taxis independent of the drivers/passengers.
      tags:
        - taxis
      responses:
        200:
          description: An array of all taxis in Json format.
          schema:
            $ref: '#/definitions/Taxi'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: create a taxi
      description: create a new taxi profile.
      tags:
        - taxis
      parameters:
        - name: number
          in: body
          description: The taxi registration number
          required: true
          type: string
        - name: manufacturer
          in: body
          description: This could be one of the following: 'Audi', 'Mercedes', 'Volkswagen', 'BMW', 'Toyota', 'Citron', 'Suzuki', 'Renault'.
          required: false
          type: string
        - name: model
          in: body
          description: Model of the car
          required: true
          type: string
        - name: bodyStyle
          in: body
          description: Could be one of 'Convertibles', 'Coupe', 'Hatchbacks', 'Vans', 'Sedans', 'Suvs', 'Trucks', 'Wagons'
          required: false
          type: string
        - name: power
          in: body
          description: Power in Horse power unit.
          required: false
          type: Number
        - name: colour
          in: body
          required: false
          type: string
        - name: capacity
          in: body
          description: Number of people that can travel inclusive driver.
          required: true
          type: Number
        - name: maximumLuggage
          in: body
          description: Maximum Luggage the taxi can carry in Kilogram/Kg.
          required: false
          type: Number
        - name: MotorExpiry
          in: body
          required: false
          type: Date
        - name: insuranceNumber
          in: body
          required: false
          type: string
        - name: insuranceExpiryDate
          in: body
          required: false
          type: string
        - name: pcoLicenseNumber
          in: body
          required: false
          type: string
        - name: pcoLicenseExpiryDate
          in: body
          required: false
          type: string
        - name: status
          description: Can be one of the 'Online', 'Offline', 'Blocked'
          in: body
          required: false
          type: string
        - name: createdBy
          description: User Id of the user who created this taxi.
          in: body
          required: false
          type: string
      responses:
        200:
          description: Profile information of the newly created driver in Json format.
      responses:
        200:
          description: Profile information for a driver.
          schema:
            $ref: '#/definitions/Driver'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /taxis/taxi_id:
    get:
      summary: A single taxi details
      description: Returns a specific taxi details.
      parameters:
        - name: taxi_id
          in: path
          type: string
          description: id of the registered taxi in the system.
      tags:
        - taxi
      responses:
        200:
          description: Taxi object in Json format.
          schema:
            $ref: '#/definitions/Taxi'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update details of a taxi
      parameters:
        - name: taxi_id
          in: path
          type: string
          description: id of the registered taxi in the system.
        - name: number
          in: body
          description: The taxi registration number
          required: true
          type: string
        - name: manufacturer
          in: body
          description: This could be one of the following: 'Audi', 'Mercedes', 'Volkswagen', 'BMW', 'Toyota', 'Citron', 'Suzuki', 'Renault'.
          required: false
          type: string
        - name: model
          in: body
          description: Model of the car
          required: true
          type: string
        - name: bodyStyle
          in: body
          description: Could be one of 'Convertibles', 'Coupe', 'Hatchbacks', 'Vans', 'Sedans', 'Suvs', 'Trucks', 'Wagons'
          required: false
          type: string
        - name: power
          in: body
          description: Power in Horse power unit.
          required: false
          type: Number
        - name: colour
          in: body
          required: false
          type: string
        - name: capacity
          in: body
          description: Number of people that can travel inclusive driver.
          required: true
          type: Number
        - name: maximumLuggage
          in: body
          description: Maximum Luggage the taxi can carry in Kilogram/Kg.
          required: false
          type: Number
        - name: MotorExpiry
          in: body
          required: false
          type: Date
        - name: insuranceNumber
          in: body
          required: false
          type: string
        - name: insuranceExpiryDate
          in: body
          required: false
          type: string
        - name: pcoLicenseNumber
          in: body
          required: false
          type: string
        - name: pcoLicenseExpiryDate
          in: body
          required: false
          type: string
        - name: status
          description: Can be one of the 'Online', 'Offline', 'Blocked'
          in: body
          required: false
          type: string
      responses:
        200:
          description: Updated taxi object in Json format.
      responses:
        200:
          description: Updated taxi details.
          schema:
            $ref: '#/definitions/Taxi'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete taxi details
      description: Remove the taxi details permanently.
      parameters:
        - name: taxi_id
          in: path
          type: string
          description: id of the registered taxi in the system.
      tags:
        - taxi
      responses:
        200:
          description: Successfully deleted the taxi details.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /taxis/searches/byNumber/_number:
    get:
      summary: Search a taxi by number
      description: Returns a List of taxis matching the number.
      parameters:
        - name: _number
          in: path
          type: string
          description: _number of the registered taxi in the system to search for.
      tags:
        - taxi
      responses:
        200:
          description: An array of Taxi objects in Json format, who have the matching taxi registration number.
          schema:
            $ref: '#/definitions/Taxi'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  TokenResponse:
    type: object
    properties:
      token:
        type: string
        description: Access token to be used for authentication in subsequent requests.
      token_type:
        type: string
        description: Type of token, ATM it is jwt
      valid_till:
        type: string
        description: Token expiry date.
  Driver:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier representing a specific driver.
      fname:
        type: string
        description: First name
      lname:
        type: string
        description: Last name.
      dob:
        type: string
        description: Date of birth.
  User:
    type: object
    properties:
      user_id:
        type: string
        description: Unique identifier representing a specific user
      email:
        type: string
        description: Unique string identifying the user in the sytem"
      password:
        type: string
        description: password.
  Taxi:
    type: object
    properties:
      taxi_id:
        type: string
        description: id of the registered taxi in the system.

      number:
        type: string
        description: The taxi registration number

      manufacturer:
        type: string
        description: This could be one of the following: 'Audi', 'Mercedes', 'Volkswagen', 'BMW', 'Toyota', 'Citron', 'Suzuki', 'Renault'.

      model:
        type: string
        description: Model of the car

      bodyStyle:
        type: string
        description: Could be one of 'Convertibles', 'Coupe', 'Hatchbacks', 'Vans', 'Sedans', 'Suvs', 'Trucks', 'Wagons'

      power:
        type: Number
        description: Power in Horse power unit.

      colour:
        type: string
        description: Colour of the car

      capacity:
        type: Number
        description: Number of people that can travel inclusive driver.

      maximumLuggage:
        type: Number
        description: Maximum Luggage the taxi can carry in Kilogram/Kg.

      motorExpiry:
        type: Date
        description: Expiry date of the engine/motor.

      insuranceNumber:
        type: string

      insuranceExpiryDate:
        type: string

      pcoLicenseNumber:
        type: string

      pcoLicenseExpiryDate:
        type: string
        description: Date of expiry of license

      status:
        type: string
        description: Can be one of the 'Online', 'Offline', 'Blocked'


  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
